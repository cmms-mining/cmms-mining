# Generated by Django 5.1.1 on 2024-09-22 08:47

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('buckets', '0044_alter_bucketdeinstallation_bucket_and_more'),
        ('sites', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='bucket',
            options={'ordering': ['number'], 'verbose_name': 'Ковш', 'verbose_name_plural': '(Справочник) Ковши'},
        ),
        migrations.AlterModelOptions(
            name='bucketcapacity',
            options={'ordering': ['capacity'], 'verbose_name': 'Объем ковша', 'verbose_name_plural': '(Справочник) Объемы ковшей'},
        ),
        migrations.AlterModelOptions(
            name='bucketcontrolpoint',
            options={'ordering': ['name'], 'verbose_name': 'Точка контроля ковша', 'verbose_name_plural': '(Справочник) Точки контроля ковшей'},
        ),
        migrations.AlterModelOptions(
            name='bucketinstallationreason',
            options={'verbose_name': 'Причина установки/демонтажа ковша', 'verbose_name_plural': '(Справочник) Причины установки/демонтажа ковшей'},
        ),
        migrations.AlterModelOptions(
            name='bucketmanufacturer',
            options={'ordering': ['name'], 'verbose_name': 'Производитель ковша', 'verbose_name_plural': '(Справочник) Производители ковшей'},
        ),
        migrations.AlterModelOptions(
            name='bucketreconciliation',
            options={'ordering': ['-date'], 'verbose_name': 'Сверка ковша', 'verbose_name_plural': 'Сверки ковшей'},
        ),
        migrations.AlterModelOptions(
            name='bucketrelocationreason',
            options={'verbose_name': 'Причина перемещения ковша', 'verbose_name_plural': '(Справочник) Причины перемещения ковшей'},
        ),
        migrations.AlterModelOptions(
            name='buckettechstateoption',
            options={'ordering': ['name'], 'verbose_name': 'Вариант техсостояния ковша', 'verbose_name_plural': '(Справочник) Варианты техсостояний ковшей'},
        ),
        migrations.AlterModelOptions(
            name='historicalbucket',
            options={'get_latest_by': ('history_date', 'history_id'), 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical Ковш', 'verbose_name_plural': 'historical (Справочник) Ковши'},
        ),
        migrations.AlterModelOptions(
            name='historicalbucketreconciliation',
            options={'get_latest_by': ('history_date', 'history_id'), 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical Сверка ковша', 'verbose_name_plural': 'historical Сверки ковшей'},
        ),
        migrations.AlterModelOptions(
            name='toothadapter',
            options={'ordering': ['name'], 'verbose_name': 'Адаптер коронки', 'verbose_name_plural': '(Справочник) Адаптеры коронки'},
        ),
        migrations.AlterField(
            model_name='bucketrelocation',
            name='from_site',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='buckets_relocations_from', to='sites.site', verbose_name='Откуда'),
        ),
        migrations.CreateModel(
            name='BucketRepair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('plan_start_date', models.DateField(blank=True, null=True, verbose_name='Плановая дата начала')),
                ('plan_end_date', models.DateField(blank=True, null=True, verbose_name='Плановая дата окончания')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('bucket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repairs', to='buckets.bucket', verbose_name='Ковш')),
            ],
            options={
                'verbose_name': 'Ремонт ковша',
                'verbose_name_plural': 'Ремонты ковшей',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalBucketRepair',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('plan_start_date', models.DateField(blank=True, null=True, verbose_name='Плановая дата начала')),
                ('plan_end_date', models.DateField(blank=True, null=True, verbose_name='Плановая дата окончания')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bucket', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='buckets.bucket', verbose_name='Ковш')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Ремонт ковша',
                'verbose_name_plural': 'historical Ремонты ковшей',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
